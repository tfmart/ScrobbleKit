{"abstract":[{"text":"Get started on scrobbling songs to a Last.fm profile","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit"]]},"identifier":{"url":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Scrobbling","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Article","modules":[{"name":"ScrobbleKit"}],"title":"Scrobbling Tracks","role":"article"},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Ensure you are authenticated with a valid session token for a Last.fm account before initiating the scrobbling process. If you havenâ€™t authenticated yet, If you need help on how to authenticate, refer to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Authentication","type":"reference"},{"text":" for assistance.","type":"text"}]},{"text":"Scrobbling a Single Track","level":3,"type":"heading","anchor":"Scrobbling-a-Single-Track"},{"inlineContent":[{"type":"text","text":"To scrobble a single track, you can use the "},{"code":"scrobble(tracks:)","type":"codeVoice"},{"type":"text","text":" method with an array containing just one "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["let track = SBKTrackToScrobble(","    artist: \"Daft Punk\",","    track: \"One More Time\",","    timestamp: Date(),","    album: \"Discovery\"",")","","do {","    let response = try await SBKManager.scrobble(tracks: [track])","    ","    if response.isCompletelySuccessful {","        print(\"Track scrobbled successfully!\")","    } else {","        if let result = response.results.first {","            if result.isAccepted {","                print(\"Scrobbled: \\(result.track.artist) - \\(result.track.track)\")","                if let correctedArtist = result.correctedArtist {","                    print(\"Artist corrected to: \\(correctedArtist)\")","                }","                if let correctedTrack = result.correctedTrack {","                    print(\"Track corrected to: \\(correctedTrack)\")","                }","            } else if let error = result.error {","                print(\"Failed to scrobble \\(result.track.artist) - \\(result.track.track): \\(error.rawValue)\")","            }","        }","    }","} catch {","    \/\/ Handle scrobbling error","}"],"syntax":"swift","type":"codeListing"},{"anchor":"Scrobbling-Multiple-Tracks","text":"Scrobbling Multiple Tracks","type":"heading","level":3},{"inlineContent":[{"text":"To scrobble multiple tracks at once, use the ","type":"text"},{"type":"codeVoice","code":"scrobble(tracks:)"},{"text":" method:","type":"text"}],"type":"paragraph"},{"code":["let tracks: [SBKTrackToScrobble] = [","    SBKTrackToScrobble(artist: \"Daft Punk\", track: \"One More Time\", timestamp: Date(), album: \"Discovery\"),","    SBKTrackToScrobble(artist: \"Daft Punk\", track: \"Harder, Better, Faster, Stronger\", timestamp: Date(), album: \"Discovery\")","]","","do {","    let response = try await SBKManager.scrobble(tracks: tracks)","    ","    if response.isCompletelySuccessful {","        print(\"All tracks scrobbled successfully!\")","    } else {","        print(\"Accepted: \\(response.acceptedCount), Ignored: \\(response.ignoredCount)\")","        ","        for result in response.results {","            if result.isAccepted {","                print(\"Scrobbled: \\(result.track.artist) - \\(result.track.track)\")","            } else if let error = result.error {","                print(\"Failed to scrobble \\(result.track.artist) - \\(result.track.track): \\(error.rawValue)\")","            }","        }","    }","} catch {","    \/\/ Handle scrobbling error","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","anchor":"Handling-the-response","text":"Handling the response","level":3},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"scrobble(tracks:)"},{"type":"text","text":" method returns an "},{"type":"codeVoice","code":"SBKScrobbleResponse"},{"text":" object, which contains:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"results"},{"type":"text","text":": An array of "},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","type":"reference","isActive":true},{"type":"text","text":" objects, one for each track attempted to be scrobbled."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"acceptedCount","type":"codeVoice"},{"text":": The number of tracks successfully scrobbled.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ignoredCount"},{"type":"text","text":": The number of tracks that failed to scrobble."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isCompletelySuccessful"},{"text":": A boolean indicating if all tracks were successfully scrobbled.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"acceptedScrobbles"},{"type":"text","text":": An array of "},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","type":"reference","isActive":true},{"type":"text","text":" objects for successfully scrobbled tracks."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ignoredScrobbles"},{"type":"text","text":": An array of "},{"isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","type":"reference"},{"type":"text","text":" objects for tracks that failed to scrobble."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Each "},{"type":"codeVoice","code":"SBKScrobbleResult"},{"text":" contains:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"track","type":"codeVoice"},{"type":"text","text":": The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble"},{"text":" object that was attempted to be scrobbled.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isAccepted"},{"text":": A boolean indicating if the track was successfully scrobbled.","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"error","type":"codeVoice"},{"type":"text","text":": An "},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleError","isActive":true,"type":"reference"},{"text":" object if the scrobble failed, ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"correctedTrack"},{"type":"text","text":", "},{"type":"codeVoice","code":"correctedArtist"},{"text":", ","type":"text"},{"type":"codeVoice","code":"correctedAlbum"},{"text":", ","type":"text"},{"code":"correctedAlbumArtist","type":"codeVoice"},{"type":"text","text":": Corrected values if Last.fm made any corrections."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"You can scrobble up to 50 tracks in a single request. Attempting to scrobble more than 50 tracks will result in a ","type":"text"},{"code":"SBKClientError.tooManyTracks","type":"codeVoice"},{"text":" error.","type":"text"}]},{"level":3,"text":"Convenience Methods","type":"heading","anchor":"Convenience-Methods"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager"},{"type":"text","text":" provides two convenience methods for checking scrobble results:"}],"type":"paragraph"},{"code":["\/\/ Check if a specific track was successfully scrobbled","let wasScrobbled = manager.scrobbledSuccessfully(tracks[0], in: response)","","\/\/ Get the error for a specific track, if any","if let error = manager.errorFor(tracks[1], in: response) {","    print(\"Scrobble failed: \\(error.rawValue)\")","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"These methods provide a quick way to check if the single track was scrobbled successfully or if there was an error.","type":"text"}],"type":"paragraph"}]}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResponse","doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKNowPlayingCorrected","doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager\/updateNowPlaying(artist:track:album:trackNumber:context:mbid:duration:albumArtist:)"],"title":"Scrobbling and Now Playing","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scrobblekit\/scrobbling"]}],"references":{"doc://ScrobbleKit/documentation/ScrobbleKit/SBKNowPlayingCorrected":{"kind":"symbol","url":"\/documentation\/scrobblekit\/sbknowplayingcorrected","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SBKNowPlayingCorrected"}],"title":"SBKNowPlayingCorrected","abstract":[{"text":"A struct representing the corrected information after a track update now playing request.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBKNowPlayingCorrected"}],"role":"symbol","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKNowPlayingCorrected"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKManager/updateNowPlaying(artist:track:album:trackNumber:context:mbid:duration:albumArtist:)":{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager\/updateNowPlaying(artist:track:album:trackNumber:context:mbid:duration:albumArtist:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Notifies Last.fm that a user has started listening to a track.","type":"text"}],"title":"updateNowPlaying(artist:track:album:trackNumber:context:mbid:duration:albumArtist:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"updateNowPlaying"},{"kind":"text","text":"("},{"text":"artist","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"track"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"album","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"trackNumber","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"?, ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mbid"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"duration"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"text":"albumArtist","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"SBKNowPlayingCorrected","preciseIdentifier":"s:11ScrobbleKit22SBKNowPlayingCorrectedV","kind":"typeIdentifier"}],"url":"\/documentation\/scrobblekit\/sbkmanager\/updatenowplaying(artist:track:album:tracknumber:context:mbid:duration:albumartist:)"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleResult":{"role":"symbol","title":"SBKScrobbleResult","abstract":[{"type":"text","text":"Represents the result of a scrobble attempt for a single track."}],"url":"\/documentation\/scrobblekit\/sbkscrobbleresult","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBKScrobbleResult"}],"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","navigatorTitle":[{"text":"SBKScrobbleResult","kind":"identifier"}]},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKTrackToScrobble":{"url":"\/documentation\/scrobblekit\/sbktracktoscrobble","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SBKTrackToScrobble","kind":"identifier"}],"role":"symbol","title":"SBKTrackToScrobble","kind":"symbol","abstract":[{"text":"Represents a track to be scrobbled to Last.fm.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SBKTrackToScrobble"}]},"doc://ScrobbleKit/documentation/ScrobbleKit":{"title":"ScrobbleKit","type":"topic","url":"\/documentation\/scrobblekit","abstract":[{"text":"Streamlined interaction with Last.fm on Apple platforms","type":"text"}],"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit","role":"collection","kind":"symbol"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleResponse":{"title":"SBKScrobbleResponse","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResponse","role":"symbol","kind":"symbol","url":"\/documentation\/scrobblekit\/sbkscrobbleresponse","abstract":[{"type":"text","text":"Represents the response from a scrobble request to Last.fm."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SBKScrobbleResponse"}],"navigatorTitle":[{"text":"SBKScrobbleResponse","kind":"identifier"}],"type":"topic"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKManager":{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager","type":"topic","navigatorTitle":[{"text":"SBKManager","kind":"identifier"}],"abstract":[{"type":"text","text":"The main class for interacting with the Last.fm API."}],"url":"\/documentation\/scrobblekit\/sbkmanager","kind":"symbol","title":"SBKManager","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SBKManager"}]},"doc://ScrobbleKit/documentation/ScrobbleKit/Authentication":{"kind":"article","url":"\/documentation\/scrobblekit\/authentication","role":"article","type":"topic","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Authentication","title":"Authenticating an User","abstract":[{"type":"text","text":"For services requiring authentication, discover how to sign in with a Last.fm account using ScrobbleKit."}]},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleError":{"title":"SBKScrobbleError","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SBKScrobbleError","kind":"identifier"}],"navigatorTitle":[{"text":"SBKScrobbleError","kind":"identifier"}],"type":"topic","abstract":[{"text":"Represents possible error cases when scrobbling a track.","type":"text"}],"role":"symbol","url":"\/documentation\/scrobblekit\/sbkscrobbleerror","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleError"}}}