{"kind":"article","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure you are authenticated with a valid session token for a Last.fm account before initiating the scrobbling process. If you havenâ€™t authenticated yet, If you need help on how to authenticate, refer to the "},{"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Authentication","isActive":true},{"text":" for assistance.","type":"text"}]},{"level":3,"type":"heading","text":"Scrobbling a Single Track","anchor":"Scrobbling-a-Single-Track"},{"inlineContent":[{"type":"text","text":"To scrobble a single track, you can use the "},{"code":"scrobble(tracks:)","type":"codeVoice"},{"text":" method with an array containing just one ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let track = SBKTrackToScrobble(","    artist: \"Daft Punk\",","    track: \"One More Time\",","    timestamp: Date(),","    album: \"Discovery\"",")","","do {","    let response = try await SBKManager.scrobble(tracks: [track])","    ","    if response.isCompletelySuccessful {","        print(\"Track scrobbled successfully!\")","    } else {","        if let result = response.results.first {","            if result.isAccepted {","                print(\"Scrobbled: \\(result.track.artist) - \\(result.track.track)\")","                if let correctedArtist = result.correctedArtist {","                    print(\"Artist corrected to: \\(correctedArtist)\")","                }","                if let correctedTrack = result.correctedTrack {","                    print(\"Track corrected to: \\(correctedTrack)\")","                }","            } else if let error = result.error {","                print(\"Failed to scrobble \\(result.track.artist) - \\(result.track.track): \\(error.rawValue)\")","            }","        }","    }","} catch {","    \/\/ Handle scrobbling error","}"]},{"level":3,"text":"Scrobbling Multiple Tracks","type":"heading","anchor":"Scrobbling-Multiple-Tracks"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To scrobble multiple tracks at once, use the "},{"type":"codeVoice","code":"scrobble(tracks:)"},{"type":"text","text":" method:"}]},{"syntax":"swift","type":"codeListing","code":["let tracks: [SBKTrackToScrobble] = [","    SBKTrackToScrobble(artist: \"Daft Punk\", track: \"One More Time\", timestamp: Date(), album: \"Discovery\"),","    SBKTrackToScrobble(artist: \"Daft Punk\", track: \"Harder, Better, Faster, Stronger\", timestamp: Date(), album: \"Discovery\")","]","","do {","    let response = try await SBKManager.scrobble(tracks: tracks)","    ","    if response.isCompletelySuccessful {","        print(\"All tracks scrobbled successfully!\")","    } else {","        print(\"Accepted: \\(response.acceptedCount), Ignored: \\(response.ignoredCount)\")","        ","        for result in response.results {","            if result.isAccepted {","                print(\"Scrobbled: \\(result.track.artist) - \\(result.track.track)\")","            } else if let error = result.error {","                print(\"Failed to scrobble \\(result.track.artist) - \\(result.track.track): \\(error.rawValue)\")","            }","        }","    }","} catch {","    \/\/ Handle scrobbling error","}"]},{"type":"heading","level":3,"text":"Handling the response","anchor":"Handling-the-response"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"scrobble(tracks:)"},{"type":"text","text":" method returns an "},{"type":"codeVoice","code":"SBKScrobbleResponse"},{"text":" object, which contains:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"results","type":"codeVoice"},{"text":": An array of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult"},{"type":"text","text":" objects, one for each track attempted to be scrobbled."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"acceptedCount"},{"type":"text","text":": The number of tracks successfully scrobbled."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ignoredCount"},{"text":": The number of tracks that failed to scrobble.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isCompletelySuccessful"},{"text":": A boolean indicating if all tracks were successfully scrobbled.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"acceptedScrobbles"},{"text":": An array of ","type":"text"},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","isActive":true,"type":"reference"},{"text":" objects for successfully scrobbled tracks.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"ignoredScrobbles","type":"codeVoice"},{"type":"text","text":": An array of "},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","type":"reference","isActive":true},{"text":" objects for tracks that failed to scrobble.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each "},{"type":"codeVoice","code":"SBKScrobbleResult"},{"text":" contains:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"track"},{"text":": The ","type":"text"},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble","isActive":true,"type":"reference"},{"text":" object that was attempted to be scrobbled.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"isAccepted"},{"type":"text","text":": A boolean indicating if the track was successfully scrobbled."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"error"},{"type":"text","text":": An "},{"isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleError","type":"reference"},{"type":"text","text":" object if the scrobble failed, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" otherwise."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"correctedTrack"},{"text":", ","type":"text"},{"type":"codeVoice","code":"correctedArtist"},{"text":", ","type":"text"},{"type":"codeVoice","code":"correctedAlbum"},{"type":"text","text":", "},{"code":"correctedAlbumArtist","type":"codeVoice"},{"type":"text","text":": Corrected values if Last.fm made any corrections."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can scrobble up to 50 tracks in a single request. Attempting to scrobble more than 50 tracks will result in a "},{"type":"codeVoice","code":"SBKClientError.tooManyTracks"},{"type":"text","text":" error."}]},{"anchor":"Convenience-Methods","type":"heading","text":"Convenience Methods","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager"},{"text":" provides two convenience methods for checking scrobble results:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Check if a specific track was successfully scrobbled","let wasScrobbled = manager.scrobbledSuccessfully(tracks[0], in: response)","","\/\/ Get the error for a specific track, if any","if let error = manager.errorFor(tracks[1], in: response) {","    print(\"Scrobble failed: \\(error.rawValue)\")","}"]},{"inlineContent":[{"type":"text","text":"These methods provide a quick way to check if the single track was scrobbled successfully or if there was an error."}],"type":"paragraph"}]}],"seeAlsoSections":[{"title":"Scrobbling","identifiers":["doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResponse"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Scrobbling"},"hierarchy":{"paths":[["doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scrobblekit\/scrobbling"]}],"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"ScrobbleKit"}],"title":"Scrobbling Tracks"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Get started on scrobbling songs to a Last.fm profile","type":"text"}],"sections":[],"references":{"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleResult":{"type":"topic","kind":"symbol","url":"\/documentation\/scrobblekit\/sbkscrobbleresult","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBKScrobbleResult"}],"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","abstract":[{"text":"Represents the result of a scrobble attempt for a single track.","type":"text"}],"title":"SBKScrobbleResult","role":"symbol","navigatorTitle":[{"text":"SBKScrobbleResult","kind":"identifier"}]},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKManager":{"type":"topic","abstract":[{"text":"The main class for interacting with the Last.fm API.","type":"text"}],"url":"\/documentation\/scrobblekit\/sbkmanager","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SBKManager"}],"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager","title":"SBKManager","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBKManager"}]},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKTrackToScrobble":{"url":"\/documentation\/scrobblekit\/sbktracktoscrobble","abstract":[{"text":"Represents a track to be scrobbled to Last.fm.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble","navigatorTitle":[{"text":"SBKTrackToScrobble","kind":"identifier"}],"title":"SBKTrackToScrobble","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBKTrackToScrobble"}],"role":"symbol","type":"topic"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleResponse":{"url":"\/documentation\/scrobblekit\/sbkscrobbleresponse","kind":"symbol","abstract":[{"text":"Represents the response from a scrobble request to Last.fm.","type":"text"}],"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResponse","navigatorTitle":[{"kind":"identifier","text":"SBKScrobbleResponse"}],"title":"SBKScrobbleResponse","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SBKScrobbleResponse","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://ScrobbleKit/documentation/ScrobbleKit/Authentication":{"kind":"article","role":"article","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Authentication","type":"topic","abstract":[{"text":"For services requiring authentication, discover how to sign in with a Last.fm account using ScrobbleKit.","type":"text"}],"title":"Authenticating an User","url":"\/documentation\/scrobblekit\/authentication"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleError":{"kind":"symbol","role":"symbol","type":"topic","title":"SBKScrobbleError","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleError","navigatorTitle":[{"kind":"identifier","text":"SBKScrobbleError"}],"url":"\/documentation\/scrobblekit\/sbkscrobbleerror","abstract":[{"type":"text","text":"Represents possible error cases when scrobbling a track."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SBKScrobbleError","kind":"identifier"}]},"doc://ScrobbleKit/documentation/ScrobbleKit":{"type":"topic","url":"\/documentation\/scrobblekit","title":"ScrobbleKit","abstract":[{"text":"Streamlined interaction with Last.fm on Apple platforms","type":"text"}],"kind":"symbol","role":"collection","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit"}}}