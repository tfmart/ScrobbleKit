{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"article","modules":[{"name":"ScrobbleKit"}],"title":"Scrobbling Tracks","roleHeading":"Article"},"abstract":[{"type":"text","text":"Get started on scrobbling songs to a Last.fm profile"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResponse"],"generated":true,"title":"Scrobbling"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Ensure you are authenticated with a valid session token for a Last.fm account before initiating the scrobbling process. If you havenâ€™t authenticated yet, If you need help on how to authenticate, refer to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Authentication","isActive":true},{"type":"text","text":" for assistance."}],"type":"paragraph"},{"type":"heading","text":"Scrobbling a Single Track","anchor":"Scrobbling-a-Single-Track","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"To scrobble a single track, you can use the "},{"code":"scrobble(tracks:)","type":"codeVoice"},{"type":"text","text":" method with an array containing just one "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble"},{"type":"text","text":":"}]},{"type":"codeListing","code":["let track = SBKTrackToScrobble(","    artist: \"Daft Punk\",","    track: \"One More Time\",","    timestamp: Date(),","    album: \"Discovery\"",")","","do {","    let response = try await SBKManager.scrobble(tracks: [track])","    ","    if response.isCompletelySuccessful {","        print(\"Track scrobbled successfully!\")","    } else {","        if let result = response.results.first {","            if result.isAccepted {","                print(\"Scrobbled: \\(result.track.artist) - \\(result.track.track)\")","                if let correctedArtist = result.correctedArtist {","                    print(\"Artist corrected to: \\(correctedArtist)\")","                }","                if let correctedTrack = result.correctedTrack {","                    print(\"Track corrected to: \\(correctedTrack)\")","                }","            } else if let error = result.error {","                print(\"Failed to scrobble \\(result.track.artist) - \\(result.track.track): \\(error.rawValue)\")","            }","        }","    }","} catch {","    \/\/ Handle scrobbling error","}"],"syntax":"swift"},{"level":3,"text":"Scrobbling Multiple Tracks","anchor":"Scrobbling-Multiple-Tracks","type":"heading"},{"inlineContent":[{"type":"text","text":"To scrobble multiple tracks at once, use the "},{"type":"codeVoice","code":"scrobble(tracks:)"},{"text":" method:","type":"text"}],"type":"paragraph"},{"code":["let tracks: [SBKTrackToScrobble] = [","    SBKTrackToScrobble(artist: \"Daft Punk\", track: \"One More Time\", timestamp: Date(), album: \"Discovery\"),","    SBKTrackToScrobble(artist: \"Daft Punk\", track: \"Harder, Better, Faster, Stronger\", timestamp: Date(), album: \"Discovery\")","]","","do {","    let response = try await SBKManager.scrobble(tracks: tracks)","    ","    if response.isCompletelySuccessful {","        print(\"All tracks scrobbled successfully!\")","    } else {","        print(\"Accepted: \\(response.acceptedCount), Ignored: \\(response.ignoredCount)\")","        ","        for result in response.results {","            if result.isAccepted {","                print(\"Scrobbled: \\(result.track.artist) - \\(result.track.track)\")","            } else if let error = result.error {","                print(\"Failed to scrobble \\(result.track.artist) - \\(result.track.track): \\(error.rawValue)\")","            }","        }","    }","} catch {","    \/\/ Handle scrobbling error","}"],"type":"codeListing","syntax":"swift"},{"text":"Handling the response","type":"heading","level":3,"anchor":"Handling-the-response"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"scrobble(tracks:)","type":"codeVoice"},{"type":"text","text":" method returns an "},{"type":"codeVoice","code":"SBKScrobbleResponse"},{"text":" object, which contains:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"results","type":"codeVoice"},{"type":"text","text":": An array of "},{"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","isActive":true},{"type":"text","text":" objects, one for each track attempted to be scrobbled."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"acceptedCount"},{"text":": The number of tracks successfully scrobbled.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ignoredCount"},{"type":"text","text":": The number of tracks that failed to scrobble."}]}]},{"content":[{"inlineContent":[{"code":"isCompletelySuccessful","type":"codeVoice"},{"text":": A boolean indicating if all tracks were successfully scrobbled.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"acceptedScrobbles"},{"type":"text","text":": An array of "},{"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","isActive":true},{"type":"text","text":" objects for successfully scrobbled tracks."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"ignoredScrobbles","type":"codeVoice"},{"text":": An array of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult"},{"text":" objects for tracks that failed to scrobble.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Each "},{"type":"codeVoice","code":"SBKScrobbleResult"},{"type":"text","text":" contains:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"track","type":"codeVoice"},{"type":"text","text":": The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble"},{"text":" object that was attempted to be scrobbled.","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"isAccepted","type":"codeVoice"},{"type":"text","text":": A boolean indicating if the track was successfully scrobbled."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"error","type":"codeVoice"},{"type":"text","text":": An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleError"},{"type":"text","text":" object if the scrobble failed, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" otherwise."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"correctedTrack"},{"type":"text","text":", "},{"code":"correctedArtist","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"correctedAlbum"},{"type":"text","text":", "},{"type":"codeVoice","code":"correctedAlbumArtist"},{"type":"text","text":": Corrected values if Last.fm made any corrections."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"You can scrobble up to 50 tracks in a single request. Attempting to scrobble more than 50 tracks will result in a "},{"code":"SBKClientError.tooManyTracks","type":"codeVoice"},{"text":" error.","type":"text"}],"type":"paragraph"},{"anchor":"Convenience-Methods","text":"Convenience Methods","type":"heading","level":3},{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager","isActive":true},{"type":"text","text":" provides two convenience methods for checking scrobble results:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Check if a specific track was successfully scrobbled","let wasScrobbled = manager.scrobbledSuccessfully(tracks[0], in: response)","","\/\/ Get the error for a specific track, if any","if let error = manager.errorFor(tracks[1], in: response) {","    print(\"Scrobble failed: \\(error.rawValue)\")","}"]},{"type":"paragraph","inlineContent":[{"text":"These methods provide a quick way to check if the single track was scrobbled successfully or if there was an error.","type":"text"}]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scrobblekit\/scrobbling"]}],"kind":"article","hierarchy":{"paths":[["doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Scrobbling"},"references":{"doc://ScrobbleKit/documentation/ScrobbleKit":{"type":"topic","url":"\/documentation\/scrobblekit","kind":"symbol","abstract":[{"type":"text","text":"Streamlined interaction with Last.fm on Apple platforms"}],"role":"collection","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit","title":"ScrobbleKit"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKManager":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SBKManager","kind":"identifier"}],"title":"SBKManager","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SBKManager"}],"url":"\/documentation\/scrobblekit\/sbkmanager","kind":"symbol","role":"symbol","abstract":[{"text":"The main class for interacting with the Last.fm API.","type":"text"}],"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleError":{"url":"\/documentation\/scrobblekit\/sbkscrobbleerror","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SBKScrobbleError","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SBKScrobbleError"}],"type":"topic","abstract":[{"type":"text","text":"Represents possible error cases when scrobbling a track."}],"title":"SBKScrobbleError","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleError","role":"symbol"},"doc://ScrobbleKit/documentation/ScrobbleKit/Authentication":{"abstract":[{"type":"text","text":"For services requiring authentication, discover how to sign in with a Last.fm account using ScrobbleKit."}],"title":"Authenticating an User","type":"topic","kind":"article","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Authentication","url":"\/documentation\/scrobblekit\/authentication","role":"article"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleResult":{"type":"topic","navigatorTitle":[{"text":"SBKScrobbleResult","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SBKScrobbleResult","kind":"identifier"}],"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","title":"SBKScrobbleResult","kind":"symbol","abstract":[{"type":"text","text":"Represents the result of a scrobble attempt for a single track."}],"url":"\/documentation\/scrobblekit\/sbkscrobbleresult","role":"symbol"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleResponse":{"navigatorTitle":[{"text":"SBKScrobbleResponse","kind":"identifier"}],"url":"\/documentation\/scrobblekit\/sbkscrobbleresponse","type":"topic","title":"SBKScrobbleResponse","abstract":[{"type":"text","text":"Represents the response from a scrobble request to Last.fm."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SBKScrobbleResponse","kind":"identifier"}],"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResponse"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKTrackToScrobble":{"url":"\/documentation\/scrobblekit\/sbktracktoscrobble","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble","kind":"symbol","title":"SBKTrackToScrobble","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBKTrackToScrobble"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"SBKTrackToScrobble","kind":"identifier"}],"abstract":[{"text":"Represents a track to be scrobbled to Last.fm.","type":"text"}]}}}