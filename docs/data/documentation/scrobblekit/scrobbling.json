{"sections":[],"variants":[{"paths":["\/documentation\/scrobblekit\/scrobbling"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Get started on scrobbling songs to a Last.fm profile"}],"identifier":{"url":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Scrobbling","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"title":"Scrobbling","identifiers":["doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResponse"]}],"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"ScrobbleKit"}],"title":"Scrobbling Tracks"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"Ensure you are authenticated with a valid session token for a Last.fm account before initiating the scrobbling process. If you havenâ€™t authenticated yet, If you need help on how to authenticate, refer to the "},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Authentication","isActive":true,"type":"reference"},{"text":" for assistance.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"Scrobbling-a-Single-Track","level":3,"text":"Scrobbling a Single Track"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To scrobble a single track, you can use the "},{"code":"scrobble(tracks:)","type":"codeVoice"},{"type":"text","text":" method with an array containing just one "},{"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble","isActive":true},{"type":"text","text":":"}]},{"syntax":"swift","type":"codeListing","code":["let track = SBKTrackToScrobble(","    artist: \"Daft Punk\",","    track: \"One More Time\",","    timestamp: Date(),","    album: \"Discovery\"",")","","do {","    let response = try await SBKManager.scrobble(tracks: [track])","    ","    if response.isCompletelySuccessful {","        print(\"Track scrobbled successfully!\")","    } else {","        if let result = response.results.first {","            if result.isAccepted {","                print(\"Scrobbled: \\(result.track.artist) - \\(result.track.track)\")","                if let correctedArtist = result.correctedArtist {","                    print(\"Artist corrected to: \\(correctedArtist)\")","                }","                if let correctedTrack = result.correctedTrack {","                    print(\"Track corrected to: \\(correctedTrack)\")","                }","            } else if let error = result.error {","                print(\"Failed to scrobble \\(result.track.artist) - \\(result.track.track): \\(error.rawValue)\")","            }","        }","    }","} catch {","    \/\/ Handle scrobbling error","}","","### Scrobbling Multiple Tracks","","To scrobble multiple tracks at once, use the `scrobble(tracks:)` method:","","```swift","let tracks: [SBKTrackToScrobble] = [","    SBKTrackToScrobble(artist: \"Daft Punk\", track: \"One More Time\", timestamp: Date(), album: \"Discovery\"),","    SBKTrackToScrobble(artist: \"Daft Punk\", track: \"Harder, Better, Faster, Stronger\", timestamp: Date(), album: \"Discovery\")","]","","do {","    let response = try await SBKManager.scrobble(tracks: tracks)","    ","    if response.isCompletelySuccessful {","        print(\"All tracks scrobbled successfully!\")","    } else {","        print(\"Accepted: \\(response.acceptedCount), Ignored: \\(response.ignoredCount)\")","        ","        for result in response.results {","            if result.isAccepted {","                print(\"Scrobbled: \\(result.track.artist) - \\(result.track.track)\")","            } else if let error = result.error {","                print(\"Failed to scrobble \\(result.track.artist) - \\(result.track.track): \\(error.rawValue)\")","            }","        }","    }","} catch {","    \/\/ Handle scrobbling error","}"]},{"type":"heading","text":"Handling the response","anchor":"Handling-the-response","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"scrobble(tracks:)"},{"type":"text","text":" method returns an "},{"type":"codeVoice","code":"SBKScrobbleResponse"},{"type":"text","text":" object, which contains:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"results","type":"codeVoice"},{"type":"text","text":": An array of "},{"isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","type":"reference"},{"text":" objects, one for each track attempted to be scrobbled.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"acceptedCount"},{"type":"text","text":": The number of tracks successfully scrobbled."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ignoredCount"},{"text":": The number of tracks that failed to scrobble.","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"isCompletelySuccessful","type":"codeVoice"},{"type":"text","text":": A boolean indicating if all tracks were successfully scrobbled."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"acceptedScrobbles","type":"codeVoice"},{"type":"text","text":": An array of "},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","type":"reference","isActive":true},{"type":"text","text":" objects for successfully scrobbled tracks."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"ignoredScrobbles"},{"text":": An array of ","type":"text"},{"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","isActive":true},{"text":" objects for tracks that failed to scrobble.","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Each ","type":"text"},{"code":"SBKScrobbleResult","type":"codeVoice"},{"text":" contains:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"track","type":"codeVoice"},{"text":": The ","type":"text"},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble","isActive":true,"type":"reference"},{"type":"text","text":" object that was attempted to be scrobbled."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isAccepted"},{"type":"text","text":": A boolean indicating if the track was successfully scrobbled."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"error"},{"type":"text","text":": An "},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleError","isActive":true,"type":"reference"},{"type":"text","text":" object if the scrobble failed, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" otherwise."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"correctedTrack","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"correctedArtist"},{"text":", ","type":"text"},{"type":"codeVoice","code":"correctedAlbum"},{"text":", ","type":"text"},{"code":"correctedAlbumArtist","type":"codeVoice"},{"type":"text","text":": Corrected values if Last.fm made any corrections."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can scrobble up to 50 tracks in a single request. Attempting to scrobble more than 50 tracks will result in a "},{"type":"codeVoice","code":"SBKClientError.tooManyTracks"},{"text":" error.","type":"text"}]},{"level":3,"type":"heading","anchor":"Convenience-Methods","text":"Convenience Methods"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager"},{"text":" provides two convenience methods for checking scrobble results:","type":"text"}]},{"code":["\/\/ Check if a specific track was successfully scrobbled","let wasScrobbled = manager.scrobbledSuccessfully(tracks[0], in: response)","","\/\/ Get the error for a specific track, if any","if let error = manager.errorFor(tracks[1], in: response) {","    print(\"Scrobble failed: \\(error.rawValue)\")","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"These methods provide a quick way to check if the single track was scrobbled successfully or if there was an error."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":[]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit"]]},"references":{"doc://ScrobbleKit/documentation/ScrobbleKit/Authentication":{"abstract":[{"type":"text","text":"For services requiring authentication, discover how to sign in with a Last.fm account using ScrobbleKit."}],"url":"\/documentation\/scrobblekit\/authentication","type":"topic","kind":"article","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/Authentication","role":"article","title":"Authenticating an User"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleResult":{"abstract":[{"text":"Represents the result of a scrobble attempt for a single track.","type":"text"}],"title":"SBKScrobbleResult","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SBKScrobbleResult"}],"navigatorTitle":[{"text":"SBKScrobbleResult","kind":"identifier"}],"role":"symbol","url":"\/documentation\/scrobblekit\/sbkscrobbleresult","type":"topic","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResult","kind":"symbol"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKTrackToScrobble":{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKTrackToScrobble","role":"symbol","url":"\/documentation\/scrobblekit\/sbktracktoscrobble","title":"SBKTrackToScrobble","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SBKTrackToScrobble","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Represents a track to be scrobbled to Last.fm."}],"navigatorTitle":[{"text":"SBKTrackToScrobble","kind":"identifier"}]},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleError":{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleError","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBKScrobbleError"}],"abstract":[{"text":"Represents possible error cases when scrobbling a track.","type":"text"}],"kind":"symbol","title":"SBKScrobbleError","type":"topic","url":"\/documentation\/scrobblekit\/sbkscrobbleerror","role":"symbol","navigatorTitle":[{"text":"SBKScrobbleError","kind":"identifier"}]},"doc://ScrobbleKit/documentation/ScrobbleKit":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit","url":"\/documentation\/scrobblekit","title":"ScrobbleKit","role":"collection","abstract":[{"text":"Streamlined interaction with Last.fm on Apple platforms","type":"text"}]},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKManager":{"type":"topic","abstract":[{"text":"The main class for interacting with the Last.fm API.","type":"text"}],"url":"\/documentation\/scrobblekit\/sbkmanager","navigatorTitle":[{"kind":"identifier","text":"SBKManager"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBKManager"}],"role":"symbol","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager","title":"SBKManager","kind":"symbol"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKScrobbleResponse":{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKScrobbleResponse","role":"symbol","navigatorTitle":[{"text":"SBKScrobbleResponse","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents the response from a scrobble request to Last.fm."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SBKScrobbleResponse","kind":"identifier"}],"title":"SBKScrobbleResponse","kind":"symbol","url":"\/documentation\/scrobblekit\/sbkscrobbleresponse"}}}