{"identifier":{"url":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/QuickStart","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit"]]},"abstract":[{"type":"text","text":"A quick start guide on how to start using ScrobbleKit on your app"}],"sections":[],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"text":"Creating a Last.fm API Key","anchor":"Creating-a-Lastfm-API-Key","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"To utilize the Last.fm API, obtain a valid API and Secret key. If you don’t have these keys, you can create them on the "},{"isActive":true,"identifier":"https:\/\/www.last.fm\/api\/account\/create","type":"reference"},{"text":".","type":"text"}]},{"type":"heading","level":3,"text":"Add ScrobbleKit as a dependency","anchor":"Add-ScrobbleKit-as-a-dependency"},{"inlineContent":[{"text":"ScrobbleKit can be added to your projects through Swift Package Manager. If you’re adding it to another Swift Package, add ScrobbleKit to your ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"type":"text","text":" file:"}],"type":"paragraph"},{"code":["let package = Package(","    ...","    dependencies: [","        ...","        .package(url: \"https:\/\/github.com\/tfmart\/scrobblekit.git\", from: \"0.1.0\")","    ],","    targets: [","        .executableTarget(","            ...","            dependencies: [.product(name: \"ScrobbleKit\", package: \"ScrobbleKit\")],","            ...","        )","    ]",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"For Xcode projects, search for the package with the repository URL ","type":"text"},{"code":"github.com\/tfmart\/scrobblekit","type":"codeVoice"},{"type":"text","text":" to add it as a dependency to iOS, macOS, or macCatalyst targets."}]},{"anchor":"Creating-a-SBKManager-instance","text":"Creating a SBKManager instance","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"After integrating ScrobbleKit, instantiate the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager"},{"text":" using the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager\/init(apiKey:secret:)"},{"type":"text","text":" initializer. This class facilitates the invocation of available API methods, utilizing the API and Secret keys provided during initialization."}]},{"type":"codeListing","syntax":"swift","code":["let manager = SBKManager(apiKey: API_KEY,","                         secret: SECRET_KEY)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Throughout your app, use this manager class to access Last.fm API methods provided in the library. Since "},{"isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager","type":"reference"},{"type":"text","text":" inherits from "},{"code":"ObservableObject","type":"codeVoice"},{"type":"text","text":", in a SwiftUI app, share this instance through a "},{"code":"StateObject","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"codeListing","code":["@main","struct MyMusicApp: App {","    @StateObject var manager = SBKManager(apiKey: API_KEY,","                                          secret: SECRET_KEY)","","    var body: some Scene {","        WindowGroup {","            ContentView()","                .environmentObject(manager)","        }","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Subsequently, import the manager property into a view:"}]},{"type":"codeListing","code":["struct ContentView: View {","    @EnvironmentObject var manager: SBKManager","","    var body: some View {","        \/\/ ...","    }","}",""],"syntax":"swift"},{"type":"heading","level":3,"anchor":"Calling-API-methods","text":"Calling API methods"},{"type":"paragraph","inlineContent":[{"text":"To utilize any of the available methods, refer to the list under the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager","type":"reference"},{"type":"text","text":" documentation. All methods support both Async\/Await for modern concurrency data fetching and completion handlers for a more traditional approach."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, to retrieve information from an album in the Last.fm database, utilize the  "},{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager\/getInfo(forAlbum:autoCorrect:username:languageCode:)","type":"reference","isActive":true},{"type":"text","text":" method, employing either of the following approaches:"}]},{"text":"Async\/Await","anchor":"AsyncAwait","level":4,"type":"heading"},{"code":["do {","    let album = try await manager.getInfo(forAlbum: .albumArtist(album: \"Random Access Memories\",","                                                                 artist: \"Daft Punk\"))","    \/\/ Use 'album' here","} catch {","    \/\/ Handle error","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":4,"text":"Completion Handler","anchor":"Completion-Handler"},{"syntax":"swift","type":"codeListing","code":["manager.getInfo(forAlbum: .albumArtist(album: \"Random Access Memories\",","                                       artist: \"Daft Punk\"))","{ album, error in","    if let album = album {","        \/\/ Use 'album' here","    } else if let error = error {","        \/\/ Handle error","    }","}"]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"article","metadata":{"modules":[{"name":"ScrobbleKit"}],"title":"Quick Start","roleHeading":"Article","role":"article"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scrobblekit\/quickstart"]}],"references":{"doc://ScrobbleKit/documentation/ScrobbleKit/SBKManager/init(apiKey:secret:)":{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager\/init(apiKey:secret:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"apiKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"secret","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[],"url":"\/documentation\/scrobblekit\/sbkmanager\/init(apikey:secret:)","title":"init(apiKey:secret:)","type":"topic","kind":"symbol"},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKManager":{"title":"SBKManager","identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager","navigatorTitle":[{"kind":"identifier","text":"SBKManager"}],"url":"\/documentation\/scrobblekit\/sbkmanager","kind":"symbol","type":"topic","role":"symbol","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SBKManager"}]},"doc://ScrobbleKit/documentation/ScrobbleKit/SBKManager/getInfo(forAlbum:autoCorrect:username:languageCode:)":{"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit\/SBKManager\/getInfo(forAlbum:autoCorrect:username:languageCode:)","type":"topic","title":"getInfo(forAlbum:autoCorrect:username:languageCode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getInfo"},{"kind":"text","text":"("},{"text":"forAlbum","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SBKAlbumSearchMethod","preciseIdentifier":"s:11ScrobbleKit20SBKAlbumSearchMethodO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"autoCorrect"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"username"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"languageCode"},{"text":": ","kind":"text"},{"text":"SBKLanguageCode","kind":"typeIdentifier","preciseIdentifier":"s:11ScrobbleKit15SBKLanguageCodeO"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"SBKAlbumResponse","kind":"typeIdentifier","preciseIdentifier":"s:11ScrobbleKit16SBKAlbumResponseV"}],"url":"\/documentation\/scrobblekit\/sbkmanager\/getinfo(foralbum:autocorrect:username:languagecode:)","kind":"symbol","abstract":[{"text":"Get the metadata and tracklist for an album on Last.fm using the album name or a MusicBrainz ID.","type":"text"}],"role":"symbol"},"doc://ScrobbleKit/documentation/ScrobbleKit":{"role":"collection","kind":"symbol","title":"ScrobbleKit","url":"\/documentation\/scrobblekit","abstract":[{"text":"Streamlined interaction with Last.fm on Apple platforms","type":"text"}],"identifier":"doc:\/\/ScrobbleKit\/documentation\/ScrobbleKit","type":"topic"},"https://www.last.fm/api/account/create":{"title":"Last.fm API portal","type":"link","titleInlineContent":[{"type":"text","text":"Last.fm API portal"}],"identifier":"https:\/\/www.last.fm\/api\/account\/create","url":"https:\/\/www.last.fm\/api\/account\/create"}}}